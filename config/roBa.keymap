#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    // automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        en {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <12 13>;
        };

        ja {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <18 19>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q           &kp W        &kp E             &kp R               &kp T                                                &kp Y            &kp U                &kp I              &kp O        &kp P
&mt LEFT_ALT A  &mt LCTRL S  &mt LEFT_SHIFT D  &mt LEFT_COMMAND F  &kp G        &none             &kp LS(LG(NUMBER_4))  &kp H            &mt RIGHT_COMMAND J  &mt RIGHT_SHIFT K  &mt RCTRL L  &mt RIGHT_ALT MINUS
&kp Z           &kp X        &kp C             &kp V               &kp B        &lt 6 ESCAPE      &none                 &kp N            &kp M                &kp COMMA          &kp DOT      &kp SLASH
&kp ESCAPE      &none        &mo 5             &mkp MB1            &lt 1 SPACE  &lt 2 TAB         &kp ENTER             &lt 1 BACKSPACE                                                       &mkp MB1
            >;

            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp EXCL        &kp AT          &kp HASH   &kp DOLLAR     &kp PERCENT                         &kp PIPE           &kp AMPS          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans
&kp TILDE       &kp UNDERSCORE  &kp PLUS   &kp ASTERISK   &kp MINUS       &trans      &trans  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&kp APOSTROPHE  &kp CARET       &kp SLASH  &kp BACKSLASH  &kp EQUAL       &trans      &trans  &kp COLON          &kp SEMI          &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&trans          &trans          &trans     &mkp MB2       &kp LANGUAGE_2  &trans      &trans  &kp LANGUAGE_1                                                                    &mkp MB2
            >;
        };

        NUMBER {
            bindings = <
&kp ESCAPE      &kp LG(LS(LEFT_BRACKET))  &kp UP_ARROW  &kp LS(LG(RIGHT_BRACKET))  &kp PAGE_UP                           &kp ASTERISK  &kp N7  &kp N8  &kp N9  &kp FSLH
&kp HOME        &kp LEFT                  &kp DOWN      &kp RIGHT                  &kp END        &none      &kp COMMA   &kp PLUS      &kp N4  &kp N5  &kp N6  &kp MINUS
&kp LEFT_SHIFT  &kp LS(LG(LEFT))          &none         &kp LS(LG(RIGHT))          &kp PAGE_DOWN  &none      &kp PERIOD  &kp N0        &kp N1  &kp N2  &kp N3  &kp EQUAL
&none           &none                     &none         &mkp MB3                   &none          &none      &none       &none                                 &mkp MB3
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans    &trans    &trans        &trans     &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans    &trans    &trans        &trans     &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                       &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        BLUETOOTH {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
